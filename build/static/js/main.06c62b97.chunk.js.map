{"version":3,"sources":["modules/actionType.js","modules/Weather/conteiners/WeatherContainer.js","modules/Weather/action.js","App.js","modules/Weather/reducer.js","reducers.js","store.js","index.js"],"names":["UPDATE_WATHER","WeatherContainer","heandlerSearch","e","preventDefault","props","updateWather","addCity","this","localStorage","getItem","Weath","City","className","onSubmit","type","value","onChange","target","placeholder","main","name","Math","round","temp","humidity","src","weather","icon","alt","description","Component","mapDispatchToProps","city","dispatch","paiload","getState","a","CITY","Weather","URL","fetch","response","ok","json","setItem","connect","App","path","exact","to","initialStore","combineReducers","state","action","middleware","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","trunk","store","createStore","rootReducer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.06c62b97.chunk.js","sourcesContent":["export const ADD_CITY = 'ADD_CITY'; //Название города\r\nexport const UPDATE_WATHER = 'UPDATE_WATHER'; //Обновление погоды","import React, {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {addCity, updateWather} from '../action';\r\n\r\nclass WeatherContainer extends Component {\r\n    \r\n  componentWillMount() {\r\n    const {updateWather, addCity} = this.props;\r\n    if(localStorage.getItem('City')) addCity(localStorage.getItem('City'))\r\n    updateWather();\r\n  }\r\n\r\n  heandlerSearch = (e) => {\r\n    e.preventDefault();\r\n    const {updateWather, addCity} = this.props;\r\n    updateWather();\r\n    addCity('')\r\n  }\r\n\r\n  render(){\r\n    let {Weath, addCity, City} = this.props;\r\n    return(\r\n      <div className='main-container'>\r\n        <form onSubmit={this.heandlerSearch} className='search'>\r\n          <input type='text' className='search__input' \r\n            value={City} onChange={(e)=>addCity(e.target.value)}\r\n            placeholder='Search...' \r\n          />\r\n          <button className='search__button'>Get Weather</button>\r\n        </form>\r\n        {Weath.main && (\r\n          <div className='city'>\r\n            <h2 className='city__name'>\r\n              <span>{Weath.name}</span>\r\n            </h2>\r\n            <div className='city__temp'>\r\n              {Math.round(Weath.main.temp)}\r\n              <sub>&deg;C</sub>\r\n            </div>\r\n            <div className='city__humidity'>\r\n              <span>Humidity: {Weath.main.humidity}</span>\r\n              <sub>%</sub>\r\n            </div>\r\n            <div className='info'>\r\n              <img className='city-icon' src={`http://openweathermap.org/img/wn/${Weath.weather[0].icon}@2x.png`} alt={Weath.weather[0].description}/>\r\n              <p>{Weath.weather[0].description}</p>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    )\r\n  } \r\n}\r\n\r\nconst mapStateToProps = ({Weather}) => ({\r\n  City: Weather.city,\r\n  Weath: Weather.weather\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n  addCity,\r\n  updateWather\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(WeatherContainer);","import {\r\n  ADD_CITY,\r\n  UPDATE_WATHER\r\n} from '../actionType';\r\n\r\nexport const addCity = (city) => (dispatch) => {\r\n  return dispatch({type: ADD_CITY, paiload: city});\r\n}\r\n\r\nexport const updateWather = () =>  async (dispatch, getState) => {\r\n  const CITY = getState().Weather.city;\r\n  const API_KEY = 'e4c2c4b2658729dc7251af701056d163';\r\n  const URL = `https://api.openweathermap.org/data/2.5/weather?q=${CITY}&appid=${API_KEY}&units=metric`;\r\n  if(!getState().Weather.city) {\r\n    return dispatch({type: UPDATE_WATHER, paiload: {}});\r\n  }\r\n  const response = await fetch(URL);\r\n  if(response.ok) {\r\n      const weather = await response.json();\r\n      localStorage.setItem('City', CITY)\r\n      return dispatch({type: UPDATE_WATHER, paiload: weather});\r\n    } else {\r\n      return dispatch({type: UPDATE_WATHER, paiload: {}});\r\n    }\r\n}","import React, {Component} from 'react';\nimport {BrowserRouter as Router, Route, Switch, Redirect} from 'react-router-dom';\nimport WeatherContainer from './modules/Weather/conteiners/WeatherContainer';\nimport './styles/app.scss';\n\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n        <div className=\"main\">\n          <Switch>\n            <Route path='/' exact>\n              <WeatherContainer />\n            </Route>\n           <Route path='*'>\n             <Redirect to='/'/>\n          </Route> \n          </Switch>\n        </div>\n      </Router>\n    );\n  } \n}\n\nexport default App;\n","const initialStore = {\r\n  city: '',\r\n  weather: {}\r\n}\r\n\r\nexport default (state = initialStore, action) => {\r\n  switch (action.type) {\r\n    case 'ADD_CITY':\r\n      return {\r\n        ...state,\r\n        city: action.paiload\r\n      };\r\n    case 'UPDATE_WATHER':\r\n      return {\r\n        ...state,\r\n        weather: action.paiload\r\n      }\r\n    default: return state;\r\n  }\r\n}","import {combineReducers} from 'redux';\r\nimport Weather from './modules/Weather/reducer';\r\n\r\nexport default combineReducers({\r\n  Weather\r\n});","import {createStore, compose, applyMiddleware} from 'redux';\r\nimport trunk from 'redux-thunk';\r\n\r\nimport rootReducer from './reducers';\r\n\r\nlet composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nlet middleware = composeEnhancer(applyMiddleware(trunk));\r\n\r\nlet store = createStore(rootReducer, middleware );\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nimport {Provider} from 'react-redux';\nimport store from './store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>\n  , document.getElementById('root')\n);\n"],"sourceRoot":""}